<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:context="http://www.springframework.org/schema/context"  
        xmlns:mvc="http://www.springframework.org/schema/mvc" 
        xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
        xsi:schemaLocation="http://www.springframework.org/schema/beans    
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                            http://www.springframework.org/schema/mvc    
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                            http://code.alibabatech.com/schema/dubbo
                            http://code.alibabatech.com/schema/dubbo/dubbo.xsd">  
        <!-- 自动扫描 -->  
        <context:component-scan base-package="com.howtodoinjava" />  
        <mvc:annotation-driven />
        <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> 
<!--         引入配置文件   -->
        <bean id="propertyConfigurer"  
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
            <property name="location" value="classpath:jdbc.properties" />  
        </bean>  
      
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
            destroy-method="close">  
            <property name="driverClassName" value="${driver}" />  
            <property name="url" value="${url}" />  
            <property name="username" value="${username}" />  
            <property name="password" value="${password}" />  
<!--             初始化连接大小   -->
<!--             <property name="initialSize" value="${initialSize}"></property>   -->
<!--             连接池最大数量   -->
<!--             <property name="maxActive" value="${maxActive}"></property>   -->
<!--             连接池最大空闲   -->
<!--             <property name="maxIdle" value="${maxIdle}"></property>   -->
<!--             连接池最小空闲   -->
<!--             <property name="minIdle" value="${minIdle}"></property>   -->
<!--             获取连接最大等待时间   -->
<!--             <property name="maxWait" value="${maxWait}"></property>   -->
        </bean>  
      
        <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
            <property name="dataSource" ref="dataSource" />  
            <property name="configLocation" value="classpath:spring-mybatis.xml" /> 
<!--             自动扫描mapping.xml文件   -->
            <property name="mapperLocations" value="classpath:com/howtodoinjava/mapper/*.xml"></property>  
        </bean>  
      
        <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
            <property name="basePackage" value="com.howtodoinjava.dao" />  
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
        </bean>  
      
        <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
        <bean id="transactionManager"  
            class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
            <property name="dataSource" ref="dataSource" />  
        </bean>
        
        <!-- 提供方应用名称信息，这个相当于起一个名字，我们dubbo管理页面比较清晰是哪个应用暴露出来的 -->
   <!-- <dubbo:application name="dubbo_provider"></dubbo:application> -->
   <!-- 使用zookeeper注册中心暴露服务地址 -->  
   <!-- <dubbo:registry address="zookeeper://127.0.0.1:2181" check="false" subscribe="false" register="" port="-1"></dubbo:registry> -->
  <!-- 要暴露的服务接口 -->  
  <!-- <dubbo:service interface="yu.maven.testapi.TestRegistryService" ref="testRegistryService" /> -->
<!--   <bean id="testRegistryService" class="com.howtodoinjava.zkserver.TestRegistryServiceImpl" /> -->
<!--  <dubbo:service interface="yu.maven.testapi.GetUsers" ref="getUsers" /> -->
 </beans>  